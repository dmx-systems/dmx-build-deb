#!/bin/sh
# prerm script for dmx
#
# see: dh_installdeb(1)

set -e

echo "Running $0 $1 $2 ..." >&2

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

## Source debconf library.
. /usr/share/debconf/confmodule

case "$1" in
    remove|deconfigure)
    ## stop and disable dmx.service
    if [ "$(systemctl is-active 'dmx.service')" ]; then
        deb-systemd-invoke stop 'dmx.service' >/dev/null || true
    fi
    if [ "$(deb-systemd-invoke is-enabled 'dmx.service')" ]; then
        deb-systemd-invoke disable 'dmx.service' >/dev/null || true
    fi
    ## make sure /var/cache/dmx is empty
    if [ -d /var/cache/dmx/bundle-cache ]; then
	rm -rf /var/cache/dmx/bundle-cache
    fi
    if [ -d /var/cache/dmx/dmx-bundle-cache ]; then
	rm -rf /var/cache/dmx/dmx-bundle-cache
    fi
    ;;

    upgrade)
    ## make sure /var/cache/dmx is empty
    if [ -d /var/cache/dmx/bundle-cache ]; then
	rm -rf /var/cache/dmx/bundle-cache
    fi
    if [ -d /var/cache/dmx/dmx-bundle-cache ]; then
	rm -rf /var/cache/dmx/dmx-bundle-cache
    fi
    ;;

    failed-upgrade)
    ;;
    *)
        echo "prerm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
